
user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (new)
$ git checkout -b screenshot
Switched to a new branch 'screenshot'

user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git status
On branch screenshot
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        automationPro/
        selenium.txt

nothing added to commit but untracked files present (use "git add" to track)

user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git add selenium.txt

user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git status
On branch screenshot
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   selenium.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        automationPro/


user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git commit -m "selenium"
[screenshot 83ea8b7] selenium
 1 file changed, 21 insertions(+)
 create mode 100644 selenium.txt

user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git config --globle user.yogeshjare
error: unknown option `globle'
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ ^C

user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git config --globle user.yogeshjare
error: unknown option `globle'
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]


user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git config --global user.yogeshjare

user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git push
fatal: The current branch screenshot has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin screenshot


user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git push --set-upstream origin screenshot
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 899 bytes | 449.00 KiB/s, done.
Total 6 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), done.
remote:
remote: Create a pull request for 'screenshot' on GitHub by visiting:
remote:      https://github.com/yogeshjare/automationproject/pull/new/screenshot
remote:
To https://github.com/yogeshjare/automationproject.git
 * [new branch]      screenshot -> screenshot
Branch 'screenshot' set up to track remote branch 'screenshot' from 'origin'.

user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$ git push
Everything up-to-date

user@DESKTOP-3O1KE5H MINGW64 ~/webd/git project/automationproject (screenshot)
$
